// Server Side

import java.io.*;
import java.net.*;

public class CubeServer {
    public static void main(String[] args) {
        try {
            // Create a server socket on port 5000
            ServerSocket serverSocket = new ServerSocket(5000);
            System.out.println("Server started. Waiting for client...");

            // Accept client connection
            Socket socket = serverSocket.accept();
            System.out.println("Client connected.");

            // Input stream to receive data from client
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            // Output stream to send data to client
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            // Read number sent by client
            String numStr = in.readLine();
            int number = Integer.parseInt(numStr);
            System.out.println("Received number from client: " + number);

            // Calculate cube
            int cube = number * number * number;

            // Send cube back to client
            out.println(cube);
            System.out.println("Sent cube back to client: " + cube);

            // Close connections
            in.close();
            out.close();
            socket.close();
            serverSocket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}




//Client Side

import java.io.*;
import java.net.*;
import java.util.Scanner;

public class CubeClient {
    public static void main(String[] args) {
        try {
            // Connect to server on localhost and port 5000
            Socket socket = new Socket("localhost", 5000);
            System.out.println("Connected to server.");

            // Create streams for communication
            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintWriter out = new PrintWriter(socket.getOutputStream(), true);

            // Ask user to enter a number
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter a number: ");
            int number = sc.nextInt();

            // Send number to server
            out.println(number);

            // Receive cube from server
            String cube = in.readLine();
            System.out.println("Cube of the number received from server: " + cube);

            // Close connections
            sc.close();
            in.close();
            out.close();
            socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}